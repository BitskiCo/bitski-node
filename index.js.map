{"version":3,"file":"index.js","sources":["src/access-token.ts","src/oauth-http-provider.ts","src/bitski-provider.ts"],"sourcesContent":["/**\n * A token that provides access to Bitski on behalf of a user.\n */\nexport class AccessToken {\n  public token: string;\n  public expiresAt?: number = undefined;\n\n  get expired(): boolean {\n    if (this.expiresAt) {\n      const now = Math.floor(Date.now() / 1000);\n      const expiresIn = this.expiresAt - now;\n      return expiresIn <= 0;\n    }\n    return false;\n  }\n\n  constructor(token: string, expiresIn?: number) {\n    this.token = token;\n    if (expiresIn && expiresIn > 0) {\n        let now = Math.floor(Date.now() / 1000);\n        this.expiresAt = now + expiresIn;\n    }\n  }\n}\n","import XMLHttpRequest from 'xhr2';\nimport { AccessToken } from './access-token';\n\n/**\n * A class that extends Web3's HTTPProvider by adding OAuth to JSON-RPC calls.\n */\nexport class OAuthHttpProvider {\n  /**\n   * The access token for the current logged in user\n   */\n  accessToken?: AccessToken = undefined;\n\n  /**\n   * The JSON-RPC endpoint\n   */\n  host: string;\n  timeout: number;\n  headers?: [any];\n\n  /**\n   * @param host JSON-RPC endpoint\n   * @param timeout Timeout in seconds\n   * @param additionalHeaders Optional headers to include with every request\n   */\n  constructor(host: string, timeout?: number, additionalHeaders?: [any]) {\n    this.host = host;\n    this.timeout = timeout || 0;\n    this.headers = additionalHeaders;\n  }\n\n  public setAccessToken(accessToken?: AccessToken): void {\n    this.accessToken = accessToken;\n  }\n\n  public getAccessToken(): Promise<AccessToken> {\n    if (this.accessToken) {\n      return Promise.resolve(this.accessToken);\n    }\n    return Promise.reject(new Error('Access token could not be found'));\n  }\n\n  /**\n   * Prepares a new XMLHttpRequest with the proper headers\n   * @returns Request object that is ready for a payload.\n   */\n  private prepareRequest(): Promise<XMLHttpRequest> {\n    const request = new XMLHttpRequest();\n    request.open('POST', this.host, true);\n    request.setRequestHeader('Content-Type', 'application/json');\n\n    const headers = this.headers;\n    if (headers) {\n      headers.forEach((header) => {\n        request.setRequestHeader(header.name, header.value);\n      });\n    }\n\n    return this.getAccessToken().then(accessToken => {\n      request.setRequestHeader('Authorization', `Bearer ${accessToken.token}`);\n      return request;\n    });\n  }\n\n  public send(payload: any, callback: any): void {\n    this.prepareRequest().then(request => {\n      console.log(payload);\n      request.onreadystatechange = () => {\n          if (request.readyState === 4 && request.timeout !== 1) {\n              var result = request.responseText;\n              var error;\n\n              try {\n                  result = JSON.parse(result);\n              } catch(e) {\n                  error = new Error(`Could not parse response: ${request.responseText}`);\n              }\n              callback(error, result);\n          }\n      };\n\n      request.ontimeout = () => {\n          callback(new Error(`Connection timed out: ${this.timeout}`));\n      };\n\n      try {\n          request.send(JSON.stringify(payload));\n      } catch(error) {\n          callback(new Error(`Could not connect to host ${this.host}`));\n      }\n\n    }).catch(err => {\n      callback(err);\n    });\n  }\n\n  /**\n   * Send a web3 / JSON-RPC request asynchronously.\n   * @param payload The JSON-RPC request object to send\n   * @param callback Handler function invoked when the request has completed.\n   */\n  public sendAsync(payload: any, callback: any): void {\n    return this.send(payload, callback);\n  }\n\n  /**\n   * Check whether we are connected to the server.\n   * @returns boolean if we are connected.\n   */\n  public connected(): boolean {\n    return true;\n  }\n}\n","import { AccessToken } from './access-token';\nimport { OAuthHttpProvider } from './oauth-http-provider';\nimport OAuth2 from 'simple-oauth2';\n\nconst BITSKI_API_V1_HOST = 'https://api.bitski.com/v1';\n\n/**\n * A Web3 provider that connects to the Bitski service\n */\nexport class BitskiProvider extends OAuthHttpProvider {\n\n  private networkName: string;\n  private settings: any;\n  private oauthClient: any;\n\n  /**\n   * @param networkName Network name\n   * @param opts Options\n   */\n  constructor(networkName: string = 'mainnet', opts: object) {\n    let settings = {\n      additionalHeaders: undefined,\n      client: {\n        id: null,\n        secret: null\n      },\n      auth: {\n        tokenHost: 'https://account.bitski.com',\n        tokenPath: '/oauth2/token'\n      },\n      tokenConfig: {\n        scope: 'eth_sign'\n      }\n    };\n    Object.assign(settings, opts);\n    const rpcURL = `${BITSKI_API_V1_HOST}/web3/${networkName}`;\n    super(rpcURL, 0, settings.additionalHeaders);\n    this.oauthClient = OAuth2.create({ client: settings.client, auth: settings.auth });\n    this.networkName = networkName;\n    this.settings = settings;\n  }\n\n  public getAccessToken(): Promise<AccessToken> {\n    if (this.accessToken && this.accessToken.expired === false) {\n      return Promise.resolve(this.accessToken);\n    }\n    return this.oauthClient.clientCredentials.getToken(this.settings.tokenConfig).then(accessTokenResult => {\n      const token = this.oauthClient.accessToken.create(accessTokenResult).token;\n      const accessToken = new AccessToken(token.access_token, parseInt(token.expires_in));\n      this.setAccessToken(accessToken);\n      return accessToken;\n    });\n  }\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}