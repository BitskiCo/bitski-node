{"map":"{\"version\":3,\"file\":\"access-token.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/access-token.ts\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;AACH;IAaE,qBAAY,KAAa,EAAE,SAAkB;QAXtC,cAAS,GAAY,SAAS,CAAC;QAYpC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAZD,sBAAI,gCAAO;aAAX;YACE,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;gBAC1C,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACvC,OAAO,SAAS,IAAI,CAAC,CAAC;aACvB;YACD,OAAO,KAAK,CAAC;QACf,CAAC;;;OAAA;IAMH,kBAAC;AAAD,CAAC,AAjBD,IAiBC\"}","code":"/**\r\n * A token that provides access to Bitski on behalf of a user.\r\n */\r\nvar AccessToken = /** @class */ (function () {\r\n    function AccessToken(token, expiresAt) {\r\n        this.expiresAt = undefined;\r\n        this.token = token;\r\n        this.expiresAt = expiresAt;\r\n    }\r\n    Object.defineProperty(AccessToken.prototype, \"expired\", {\r\n        get: function () {\r\n            if (this.expiresAt) {\r\n                var now = Math.floor(Date.now() / 1000);\r\n                var expiresIn = this.expiresAt - now;\r\n                return expiresIn <= 0;\r\n            }\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AccessToken;\r\n}());\r\nexport { AccessToken };\r\n//# sourceMappingURL=access-token.js.map","dts":{"name":"/Users/jp/Work/bitski-node/dist/types/access-token.d.ts","writeByteOrderMark":false,"text":"/**\r\n * A token that provides access to Bitski on behalf of a user.\r\n */\r\nexport declare class AccessToken {\r\n    token: string;\r\n    expiresAt?: number;\r\n    readonly expired: boolean;\r\n    constructor(token: string, expiresAt?: number);\r\n}\r\n"}}
